name: D10 Composer Audit Test
on: push
jobs:
  drupal-security-audit:
    runs-on: ubuntu-latest
    name: Drupal security audit
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@2.35.4
        with:
          coverage: "none"
          php-version: 8.2
          tools: composer:v2

      - name: "Composer install"
        uses: "ramsey/composer-install@2.2.0"
        with:
          composer-options: "--prefer-dist"

      - name: Run composer audit for Drupal packages
        run: |
          echo "# Drupal Security Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Run full audit and capture output
          composer audit --locked --format=json > audit_full.json 2>&1 || AUDIT_EXIT_CODE=$?

          # Filter results to only show drupal/ packages
          if [ -f "audit_full.json" ] && [ -s "audit_full.json" ]; then
            # Parse JSON and filter for drupal packages
            DRUPAL_ADVISORIES=$(cat audit_full.json | jq '.advisories | to_entries[] | select(.key | startswith("drupal/"))' 2>/dev/null)

            if [ -n "$DRUPAL_ADVISORIES" ] && [ "$DRUPAL_ADVISORIES" != "" ]; then
              echo "⚠️ **Security vulnerabilities detected in Drupal packages!**" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY

              # Get table format for better readability
              composer audit --locked --format=table > audit_table.txt 2>&1 || true
              if [ -f "audit_table.txt" ] && grep -q "drupal/" audit_table.txt; then
                echo "**Security Issues Found:**" >> $GITHUB_STEP_SUMMARY
                echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
                # Show basic table first
                grep -E "(^Package|^----|drupal/)" audit_table.txt >> $GITHUB_STEP_SUMMARY
                echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
                echo "" >> $GITHUB_STEP_SUMMARY
                
                # Add version information for affected packages
                echo "**Package Version Details:**" >> $GITHUB_STEP_SUMMARY
                echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
                echo "Package | Installed Version | Required Version" >> $GITHUB_STEP_SUMMARY
                echo "--------|------------------|------------------" >> $GITHUB_STEP_SUMMARY
                
                # Extract package names and get version info
                AFFECTED_PACKAGES=$(grep "drupal/" audit_table.txt | grep -v "^Package" | awk -F'|' '{print $3}' | sed 's/^ *//;s/ *$//' || echo "")
                if [ -n "$AFFECTED_PACKAGES" ]; then
                  for pkg in $AFFECTED_PACKAGES; do
                    if [ -n "$pkg" ] && [[ "$pkg" == drupal/* ]]; then
                      INSTALLED_VERSION=$(composer show "$pkg" 2>/dev/null | grep "versions" | head -1 | awk '{print $4}' || echo "unknown")
                      AFFECTED_VERSION=$(grep -A 10 "$pkg" audit_table.txt | grep "Affected versions" | awk -F'|' '{print $3}' | sed 's/^ *//;s/ *$//' || echo "unknown")
                      echo "$pkg | $INSTALLED_VERSION | $AFFECTED_VERSION" >> $GITHUB_STEP_SUMMARY
                    fi
                  done
                fi
                echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

              else
                # Fallback to JSON if table format fails
                echo "**Security Issues Found:**" >> $GITHUB_STEP_SUMMARY
                echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
                echo "$DRUPAL_ADVISORIES" >> $GITHUB_STEP_SUMMARY
                echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
              fi

              echo "❌ Drupal security audit failed - vulnerabilities found in Drupal packages"
              
              # Show table format in console output as well
              if [ -f "audit_table.txt" ] && grep -q "drupal/" audit_table.txt; then
                echo "Security vulnerabilities found:"
                grep -E "(^Package|^----|drupal/)" audit_table.txt
                echo ""
                echo "Package version details:"
                echo "Package | Installed Version | Required Version"
                echo "--------|------------------|------------------"
                
                AFFECTED_PACKAGES=$(grep "drupal/" audit_table.txt | grep -v "^Package" | awk -F'|' '{print $3}' | sed 's/^ *//;s/ *$//' || echo "")
                if [ -n "$AFFECTED_PACKAGES" ]; then
                  for pkg in $AFFECTED_PACKAGES; do
                    if [ -n "$pkg" ] && [[ "$pkg" == drupal/* ]]; then
                      INSTALLED_VERSION=$(composer show "$pkg" 2>/dev/null | grep "versions" | head -1 | awk '{print $4}' || echo "unknown")
                      AFFECTED_VERSION=$(grep -A 10 "$pkg" audit_table.txt | grep "Affected versions" | awk -F'|' '{print $3}' | sed 's/^ *//;s/ *$//' || echo "unknown")
                      echo "$pkg | $INSTALLED_VERSION | $AFFECTED_VERSION"
                    fi
                  done
                fi
              else
                echo "$DRUPAL_ADVISORIES"
              fi
              exit 1
            else
              echo "✅ **No security vulnerabilities found in Drupal packages!**" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY

              # Show that we checked but found no Drupal issues
              if [ "${AUDIT_EXIT_CODE:-0}" != "0" ]; then
                echo "ℹ️ **Note:** Security issues were found in non-Drupal packages, but no Drupal packages are affected." >> $GITHUB_STEP_SUMMARY
                echo "" >> $GITHUB_STEP_SUMMARY
              else
                echo "✅ **No security issues found in any packages (including non-Drupal packages)!**" >> $GITHUB_STEP_SUMMARY
                echo "" >> $GITHUB_STEP_SUMMARY
              fi

              echo "✅ Drupal security audit passed - no vulnerabilities detected in Drupal packages"
            fi
          else
            # Fallback to table format if JSON parsing failed
            composer audit --locked --format=table > audit_table.txt 2>&1 || AUDIT_EXIT_CODE=$?

            if grep -q "drupal/" audit_table.txt; then
              echo "⚠️ **Security vulnerabilities detected in Drupal packages!**" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Security Issues Found:**" >> $GITHUB_STEP_SUMMARY
              echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
              grep -E "(^Package|^----|drupal/)" audit_table.txt >> $GITHUB_STEP_SUMMARY
              echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              
              # Add version information for affected packages
              echo "**Package Version Details:**" >> $GITHUB_STEP_SUMMARY
              echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
              echo "Package | Installed Version | Required Version" >> $GITHUB_STEP_SUMMARY
              echo "--------|------------------|------------------" >> $GITHUB_STEP_SUMMARY
              
              AFFECTED_PACKAGES=$(grep "drupal/" audit_table.txt | grep -v "^Package" | awk -F'|' '{print $3}' | sed 's/^ *//;s/ *$//' || echo "")
              if [ -n "$AFFECTED_PACKAGES" ]; then
                for pkg in $AFFECTED_PACKAGES; do
                  if [ -n "$pkg" ] && [[ "$pkg" == drupal/* ]]; then
                    INSTALLED_VERSION=$(composer show "$pkg" 2>/dev/null | grep "versions" | head -1 | awk '{print $4}' || echo "unknown")
                    AFFECTED_VERSION=$(grep -A 10 "$pkg" audit_table.txt | grep "Affected versions" | awk -F'|' '{print $3}' | sed 's/^ *//;s/ *$//' || echo "unknown")
                    echo "$pkg | $INSTALLED_VERSION | $AFFECTED_VERSION" >> $GITHUB_STEP_SUMMARY
                  fi
                done
              fi
              echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
              echo "❌ Drupal security audit failed - vulnerabilities found"
              echo "Security vulnerabilities found:"
              grep -E "(^Package|^----|drupal/)" audit_table.txt
              echo ""
              echo "Package version details:"
              echo "Package | Installed Version | Required Version"
              echo "--------|------------------|------------------"
              
              AFFECTED_PACKAGES=$(grep "drupal/" audit_table.txt | grep -v "^Package" | awk -F'|' '{print $3}' | sed 's/^ *//;s/ *$//' || echo "")
              if [ -n "$AFFECTED_PACKAGES" ]; then
                for pkg in $AFFECTED_PACKAGES; do
                  if [ -n "$pkg" ] && [[ "$pkg" == drupal/* ]]; then
                    INSTALLED_VERSION=$(composer show "$pkg" 2>/dev/null | grep "versions" | head -1 | awk '{print $4}' || echo "unknown")
                    AFFECTED_VERSION=$(grep -A 10 "$pkg" audit_table.txt | grep "Affected versions" | awk -F'|' '{print $3}' | sed 's/^ *//;s/ *$//' || echo "unknown")
                    echo "$pkg | $INSTALLED_VERSION | $AFFECTED_VERSION"
                  fi
                done
              fi
              exit 1
            else
              echo "✅ **No security vulnerabilities found in Drupal packages!**" >> $GITHUB_STEP_SUMMARY
              if [ "${AUDIT_EXIT_CODE:-0}" != "0" ]; then
                echo "" >> $GITHUB_STEP_SUMMARY
                echo "ℹ️ **Note:** Security issues were found in non-Drupal packages, but no Drupal packages are affected." >> $GITHUB_STEP_SUMMARY
              else
                echo "" >> $GITHUB_STEP_SUMMARY
                echo "✅ **No security issues found in any packages (including non-Drupal packages)!**" >> $GITHUB_STEP_SUMMARY
              fi
              echo "✅ Drupal security audit passed - no vulnerabilities detected in Drupal packages"
            fi
          fi
